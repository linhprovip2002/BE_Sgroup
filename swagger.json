{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "My API"
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "BearerAuth": [
      ]
    }
  ],
    "paths": {
      "/api/users": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Get all users",
          "responses": {
            "200": {
              "description": "List of users"
            }
          }
        }
      },
      "/api/users/{id}": {
        "get": {
          "tags": [
            "user"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "required": true
            }
          ],
          "summary": "Get user by ID",
          "responses": {
            "200": {
              "description": "User details"
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        },
        "put": {
          "tags": [
            "user"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "required": true
            }
          ],
          "requestBody": {
            "description": "Update an existent user in the store",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "summary": "Update user",
          "responses": {
            "200": {
              "description": "Updated user"
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        },
        "delete": {
          "tags": [
            "user"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "required": true
            }
          ],
          "summary": "Delete user",
          "responses": {
            "204": {
              "description": "User deleted"
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      },
      "/api/auth/register": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Register user",
          "responses": {
            "200": {
              "description": "User registered"
            }
          },
          "requestBody":{
            "description": "Register user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "/api/auth/login": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Log in user",
          "responses": {
            "200": {
              "description": "User logged in"
            }
          },
          "requestBody": {
            "description": "Log in user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login"
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "example": 10
            },
            "name": {
              "type": "string",
              "example": "theUser"
            },
            "gender": {
              "type": "boolean",
              "example": true
            },
            "age": {
              "type": "integer",
              "format": "int64",
              "example": 10
            },
            "username": {
              "type": "string",
              "example": "theUser"
            },
            "password": {
              "type": "string",
              "example": "theUser"
            },
            "email":{
              "type": "string",
              "example": "theUser"
            }
          },
          "xml": {
            "name": "user"
          }
        },
        "login":
        {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "theUser"
            },
            "password": {
              "type": "string",
              "example": "theUser"
            }
          },
          "xml": {
            "name": "login"
          }
        }
      },
      "requestBodies": {
        "UserArray": {
          "description": "List of user object",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "securitySchemes": {
        "petstore_auth": {
          "type": "oauth2",
          "flows": {
            "implicit": {
              "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
              "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
              }
            }
          }
        },
        "api_key": {
          "type": "apiKey",
          "name": "api_key",
          "in": "header"
        }
      }
    }
  }